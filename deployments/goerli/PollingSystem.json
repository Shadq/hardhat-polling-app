{
  "address": "0xa7B195Ba6DC51EE9f42c2F5589dD2A2ab237127F",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "becomePoller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_idea",
          "type": "string"
        }
      ],
      "name": "createPoll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pollers",
      "outputs": [
        {
          "internalType": "address",
          "name": "pollerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "polls",
      "outputs": [
        {
          "internalType": "address",
          "name": "pollCreator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "idea",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "pollID",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_idea",
          "type": "string"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "address",
          "name": "voterAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timesVoted",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d4f50794bf0e632a022d08ae06b0346e755d0de47f6508dcae70a189c2cb9c6",
  "receipt": {
    "to": null,
    "from": "0xBe06cdDda357cB8EE2B0F94e8499796A8215a1Ef",
    "contractAddress": "0xa7B195Ba6DC51EE9f42c2F5589dD2A2ab237127F",
    "transactionIndex": 86,
    "gasUsed": "890954",
    "logsBloom": "0x
    "blockHash": "0x72c105a075e546007ad5f8da21038199e240422293d58c0566a024316e9439a9",
    "transactionHash": "0x2d4f50794bf0e632a022d08ae06b0346e755d0de47f6508dcae70a189c2cb9c6",
    "logs": [],
    "blockNumber": 8128602,
    "cumulativeGasUsed": "23005802",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9288b4455b335701ba1b129fd69abfa9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"becomePoller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_idea\",\"type\":\"string\"}],\"name\":\"createPoll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pollers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pollerAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"polls\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pollCreator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"idea\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"pollID\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_idea\",\"type\":\"string\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timesVoted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PollingSystem.sol\":\"PollingSystem\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PollingSystem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ncontract PollingSystem {\\n    constructor() {\\n        Voter memory newVoter = Voter({\\n            voterAddress: msg.sender,\\n            timesVoted: 0\\n        });\\n        voters[newVoter.voterAddress] = newVoter;\\n    }\\n\\n    struct Poll {\\n        address pollCreator;\\n        uint votes;\\n        string idea;\\n        uint pollID;\\n    }\\n    struct Poller {\\n        address pollerAddress;\\n    }\\n    struct Voter {\\n        address voterAddress;\\n        uint timesVoted;\\n    }\\n\\n    mapping(string => Poll) public polls;\\n    mapping(address => Poller) public pollers;\\n    mapping(address => Voter) public voters;\\n\\n    function becomePoller() public {\\n        require(\\n            pollers[msg.sender].pollerAddress != msg.sender,\\n            \\\"You are already a poller\\\"\\n        );\\n        Poller memory newPoller = Poller({pollerAddress: msg.sender});\\n        pollers[newPoller.pollerAddress] = newPoller;\\n    }\\n\\n    function createPoll(string memory _idea) public {\\n        require(\\n            pollers[msg.sender].pollerAddress == msg.sender,\\n            \\\"You have to be a poller to create one\\\"\\n        );\\n        uint id;\\n        id++;\\n        Poll memory newPoll = Poll({\\n            pollCreator: msg.sender,\\n            votes: 0,\\n            idea: _idea,\\n            pollID: id\\n        });\\n        polls[newPoll.idea] = newPoll;\\n    }\\n\\n    function vote(string memory _idea) public {\\n        Poll storage poll = polls[_idea];\\n        Voter storage voter = voters[msg.sender];\\n        require(\\n            poll.pollCreator != msg.sender,\\n            \\\"You cannot vote your own poll!\\\"\\n        );\\n        require(voter.timesVoted == 0, \\\"You cannot vote twice!\\\");\\n\\n        poll.votes++;\\n        voter.timesVoted++;\\n    }\\n}\\n\",\"keccak256\":\"0xd7d89bfa6733d3e4fed58ca1934b4048990e8ee553935ae7b6fd7b64e8f33501\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001600081525090508060026000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015590505050610eb7806100e96000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80635b6d72331461006757806368cced9d1461007157806374a9ced9146100a15780638058316a146100bd578063a3ec138d146100f0578063fc36e15b14610121575b600080fd5b61006f61013d565b005b61008b60048036038101906100869190610883565b6102c8565b60405161009891906108bf565b60405180910390f35b6100bb60048036038101906100b69190610a20565b610306565b005b6100d760048036038101906100d29190610a20565b6104c5565b6040516100e79493929190610b0a565b60405180910390f35b61010a60048036038101906101059190610883565b6105b3565b604051610118929190610b56565b60405180910390f35b61013b60048036038101906101369190610a20565b6105f7565b005b3373ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561020e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020590610bcb565b60405180910390fd5b600060405180602001604052803373ffffffffffffffffffffffffffffffffffffffff1681525090508060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b3373ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610c5d565b60405180910390fd5b600080806103e390610cac565b915050600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200184815260200183815250905080600082604001516040516104379190610d31565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906104b292919061076e565b5060608201518160030155905050505050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461052a90610d77565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610d77565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050908060030154905084565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600080826040516106089190610d31565b908152602001604051809103902090506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e590610df5565b60405180910390fd5b6000816001015414610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90610e61565b60405180910390fd5b81600101600081548092919061074a90610cac565b919050555080600101600081548092919061076490610cac565b9190505550505050565b82805461077a90610d77565b90600052602060002090601f01602090048101928261079c57600085556107e3565b82601f106107b557805160ff19168380011785556107e3565b828001600101855582156107e3579182015b828111156107e25782518255916020019190600101906107c7565b5b5090506107f091906107f4565b5090565b5b8082111561080d5760008160009055506001016107f5565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085082610825565b9050919050565b61086081610845565b811461086b57600080fd5b50565b60008135905061087d81610857565b92915050565b6000602082840312156108995761089861081b565b5b60006108a78482850161086e565b91505092915050565b6108b981610845565b82525050565b60006020820190506108d460008301846108b0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61092d826108e4565b810181811067ffffffffffffffff8211171561094c5761094b6108f5565b5b80604052505050565b600061095f610811565b905061096b8282610924565b919050565b600067ffffffffffffffff82111561098b5761098a6108f5565b5b610994826108e4565b9050602081019050919050565b82818337600083830152505050565b60006109c36109be84610970565b610955565b9050828152602081018484840111156109df576109de6108df565b5b6109ea8482856109a1565b509392505050565b600082601f830112610a0757610a066108da565b5b8135610a178482602086016109b0565b91505092915050565b600060208284031215610a3657610a3561081b565b5b600082013567ffffffffffffffff811115610a5457610a53610820565b5b610a60848285016109f2565b91505092915050565b6000819050919050565b610a7c81610a69565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abc578082015181840152602081019050610aa1565b83811115610acb576000848401525b50505050565b6000610adc82610a82565b610ae68185610a8d565b9350610af6818560208601610a9e565b610aff816108e4565b840191505092915050565b6000608082019050610b1f60008301876108b0565b610b2c6020830186610a73565b8181036040830152610b3e8185610ad1565b9050610b4d6060830184610a73565b95945050505050565b6000604082019050610b6b60008301856108b0565b610b786020830184610a73565b9392505050565b7f596f752061726520616c7265616479206120706f6c6c65720000000000000000600082015250565b6000610bb5601883610a8d565b9150610bc082610b7f565b602082019050919050565b60006020820190508181036000830152610be481610ba8565b9050919050565b7f596f75206861766520746f206265206120706f6c6c657220746f20637265617460008201527f65206f6e65000000000000000000000000000000000000000000000000000000602082015250565b6000610c47602583610a8d565b9150610c5282610beb565b604082019050919050565b60006020820190508181036000830152610c7681610c3a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb782610a69565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cea57610ce9610c7d565b5b600182019050919050565b600081905092915050565b6000610d0b82610a82565b610d158185610cf5565b9350610d25818560208601610a9e565b80840191505092915050565b6000610d3d8284610d00565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d8f57607f821691505b60208210811415610da357610da2610d48565b5b50919050565b7f596f752063616e6e6f7420766f746520796f7572206f776e20706f6c6c210000600082015250565b6000610ddf601e83610a8d565b9150610dea82610da9565b602082019050919050565b60006020820190508181036000830152610e0e81610dd2565b9050919050565b7f596f752063616e6e6f7420766f74652074776963652100000000000000000000600082015250565b6000610e4b601683610a8d565b9150610e5682610e15565b602082019050919050565b60006020820190508181036000830152610e7a81610e3e565b905091905056fea26469706673582212201b7ac9eeecafed1881b196ccad88c4f1dfd855be31f63513c392388952f3ea0164736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80635b6d72331461006757806368cced9d1461007157806374a9ced9146100a15780638058316a146100bd578063a3ec138d146100f0578063fc36e15b14610121575b600080fd5b61006f61013d565b005b61008b60048036038101906100869190610883565b6102c8565b60405161009891906108bf565b60405180910390f35b6100bb60048036038101906100b69190610a20565b610306565b005b6100d760048036038101906100d29190610a20565b6104c5565b6040516100e79493929190610b0a565b60405180910390f35b61010a60048036038101906101059190610883565b6105b3565b604051610118929190610b56565b60405180910390f35b61013b60048036038101906101369190610a20565b6105f7565b005b3373ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561020e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020590610bcb565b60405180910390fd5b600060405180602001604052803373ffffffffffffffffffffffffffffffffffffffff1681525090508060016000836000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b3373ffffffffffffffffffffffffffffffffffffffff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cd90610c5d565b60405180910390fd5b600080806103e390610cac565b915050600060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200184815260200183815250905080600082604001516040516104379190610d31565b908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906104b292919061076e565b5060608201518160030155905050505050565b6000818051602081018201805184825260208301602085012081835280955050505050506000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101549080600201805461052a90610d77565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610d77565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b5050505050908060030154905084565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600080826040516106089190610d31565b908152602001604051809103902090506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156106ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e590610df5565b60405180910390fd5b6000816001015414610735576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072c90610e61565b60405180910390fd5b81600101600081548092919061074a90610cac565b919050555080600101600081548092919061076490610cac565b9190505550505050565b82805461077a90610d77565b90600052602060002090601f01602090048101928261079c57600085556107e3565b82601f106107b557805160ff19168380011785556107e3565b828001600101855582156107e3579182015b828111156107e25782518255916020019190600101906107c7565b5b5090506107f091906107f4565b5090565b5b8082111561080d5760008160009055506001016107f5565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085082610825565b9050919050565b61086081610845565b811461086b57600080fd5b50565b60008135905061087d81610857565b92915050565b6000602082840312156108995761089861081b565b5b60006108a78482850161086e565b91505092915050565b6108b981610845565b82525050565b60006020820190506108d460008301846108b0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61092d826108e4565b810181811067ffffffffffffffff8211171561094c5761094b6108f5565b5b80604052505050565b600061095f610811565b905061096b8282610924565b919050565b600067ffffffffffffffff82111561098b5761098a6108f5565b5b610994826108e4565b9050602081019050919050565b82818337600083830152505050565b60006109c36109be84610970565b610955565b9050828152602081018484840111156109df576109de6108df565b5b6109ea8482856109a1565b509392505050565b600082601f830112610a0757610a066108da565b5b8135610a178482602086016109b0565b91505092915050565b600060208284031215610a3657610a3561081b565b5b600082013567ffffffffffffffff811115610a5457610a53610820565b5b610a60848285016109f2565b91505092915050565b6000819050919050565b610a7c81610a69565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610abc578082015181840152602081019050610aa1565b83811115610acb576000848401525b50505050565b6000610adc82610a82565b610ae68185610a8d565b9350610af6818560208601610a9e565b610aff816108e4565b840191505092915050565b6000608082019050610b1f60008301876108b0565b610b2c6020830186610a73565b8181036040830152610b3e8185610ad1565b9050610b4d6060830184610a73565b95945050505050565b6000604082019050610b6b60008301856108b0565b610b786020830184610a73565b9392505050565b7f596f752061726520616c7265616479206120706f6c6c65720000000000000000600082015250565b6000610bb5601883610a8d565b9150610bc082610b7f565b602082019050919050565b60006020820190508181036000830152610be481610ba8565b9050919050565b7f596f75206861766520746f206265206120706f6c6c657220746f20637265617460008201527f65206f6e65000000000000000000000000000000000000000000000000000000602082015250565b6000610c47602583610a8d565b9150610c5282610beb565b604082019050919050565b60006020820190508181036000830152610c7681610c3a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cb782610a69565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cea57610ce9610c7d565b5b600182019050919050565b600081905092915050565b6000610d0b82610a82565b610d158185610cf5565b9350610d25818560208601610a9e565b80840191505092915050565b6000610d3d8284610d00565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d8f57607f821691505b60208210811415610da357610da2610d48565b5b50919050565b7f596f752063616e6e6f7420766f746520796f7572206f776e20706f6c6c210000600082015250565b6000610ddf601e83610a8d565b9150610dea82610da9565b602082019050919050565b60006020820190508181036000830152610e0e81610dd2565b9050919050565b7f596f752063616e6e6f7420766f74652074776963652100000000000000000000600082015250565b6000610e4b601683610a8d565b9150610e5682610e15565b602082019050919050565b60006020820190508181036000830152610e7a81610e3e565b905091905056fea26469706673582212201b7ac9eeecafed1881b196ccad88c4f1dfd855be31f63513c392388952f3ea0164736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 43,
        "contract": "contracts/PollingSystem.sol:PollingSystem",
        "label": "polls",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Poll)30_storage)"
      },
      {
        "astId": 48,
        "contract": "contracts/PollingSystem.sol:PollingSystem",
        "label": "pollers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(Poller)33_storage)"
      },
      {
        "astId": 53,
        "contract": "contracts/PollingSystem.sol:PollingSystem",
        "label": "voters",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Voter)38_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Poller)33_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PollingSystem.Poller)",
        "numberOfBytes": "32",
        "value": "t_struct(Poller)33_storage"
      },
      "t_mapping(t_address,t_struct(Voter)38_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PollingSystem.Voter)",
        "numberOfBytes": "32",
        "value": "t_struct(Voter)38_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Poll)30_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct PollingSystem.Poll)",
        "numberOfBytes": "32",
        "value": "t_struct(Poll)30_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Poll)30_storage": {
        "encoding": "inplace",
        "label": "struct PollingSystem.Poll",
        "members": [
          {
            "astId": 23,
            "contract": "contracts/PollingSystem.sol:PollingSystem",
            "label": "pollCreator",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 25,
            "contract": "contracts/PollingSystem.sol:PollingSystem",
            "label": "votes",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 27,
            "contract": "contracts/PollingSystem.sol:PollingSystem",
            "label": "idea",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 29,
            "contract": "contracts/PollingSystem.sol:PollingSystem",
            "label": "pollID",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Poller)33_storage": {
        "encoding": "inplace",
        "label": "struct PollingSystem.Poller",
        "members": [
          {
            "astId": 32,
            "contract": "contracts/PollingSystem.sol:PollingSystem",
            "label": "pollerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Voter)38_storage": {
        "encoding": "inplace",
        "label": "struct PollingSystem.Voter",
        "members": [
          {
            "astId": 35,
            "contract": "contracts/PollingSystem.sol:PollingSystem",
            "label": "voterAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 37,
            "contract": "contracts/PollingSystem.sol:PollingSystem",
            "label": "timesVoted",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}